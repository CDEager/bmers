% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bmer.R
\name{bmer}
\alias{bmer}
\alias{build_bmer_model}
\alias{fit_bmer_build}
\title{Bayeisan mixed effects regression.}
\usage{
bmer(formula, data, family = gaussian, control = bmer_control(),
  model_name = "anon_model", adapt_delta = 0.8, max_treedepth = 10, ...)

build_bmer_model(formula, data, family = gaussian, control = bmer_control(),
  model_name = "anon_model")

fit_bmer_build(build, adapt_delta = 0.8, max_treedepth = 10, ...)
}
\arguments{
\item{formula}{A formula describing the model to be fit.  See 'Details'.}

\item{data}{A data.frame containing variables for the model.}

\item{family}{Regression family. Currently, gaussian and binomial are supported.}

\item{control}{A call to \code{\link{bmer_control}}.}

\item{model_name}{Character. A name given to the model.}

\item{adapt_delta}{Passed to the control argument for \code{\link[rstan]{sampling}}. See the vignette.}

\item{max_treedepth}{Passed to the control argument for \code{\link[rstan]{sampling}}. See the vignette.}

\item{...}{Additional arguments to be passed to \code{\link[rstan]{sampling}}. See the vignette.}

\item{build}{An object of class \linkS4class{bmerBuild}.}
}
\value{
The \code{bmer} function begins by calling \code{build_bmer_model}, a modular function which returns a
\linkS4class{bmerBuild}, and then passes this onto \code{fit_bmer_build}, which returns a \linkS4class{bmerFit}.
If you are new to \code{bmers}, you may want to use the two modular functions manually at first to ensure that
\code{build_bmer_model} is interpreting your variables the way you intended before passing
the \linkS4class{bmerBuild} to \code{fit_bmer_build}.
}
\description{
Fit a Bayesian mixed effects regression with a maximal random effects structure
and weakly informative priors in Stan through the rstan interface using NUTS.
Additional details not covered here can be found in the vignette at
\url{https://github.com/CDEager/bmers/inst/doc/using-bmers.html}
}
\details{
The \code{formula} should have the form \code{response ~ fixed | random_groups}
without slopes and intercepts specified. Only the names of the variables which
are to be considered random grouping factors should be given to the right of the
the pipe '|', separated by '+'. Nesting structure is expressed as in any other
case. For example, \code{y ~ x1 + x2 | subject + A/B} would indicate that there
are three random effect groups: \code{subject}, \code{'A'}, and \code{'B'} nested
within \code{'A'} (that is, \code{A:B}). Random intercepts will be fit for each of
these groups.  For each of the fixed effects \code{x1} and \code{x2}, random slopes
will be fit for a group if the effect varies within-group (i.e. individual group
members have more than one value for the effect).

The arguments to \code{bmer} are first passed to \code{build_bmer_model}.  All continuous
variables (fixed-effect covariates and, in Gaussian regressions, the response) are scaled
(i.e. mean-centered and divided by their standard deviations) so that they have
mean 0 and standard deviation 1.  Sum contrasts are set for unordered factors
rather than treatment contrasts, and scaled polynomial contrasts (orthogonal 
polynomial contrasts where the standard deviation of each column in the contrast
matrix is 1) are set for ordered factors rather than polynomial contrasts. For
details on the handling of NA values, see the vignette.  The maximal random effect
structure for each random effect group is then determined, and the model matrix is
generated; see \code{\link{bmer_control}} for details on the priors.
Stan code and a list of data to be passed to \code{\link[rstan]{sampling}} are then assembled
and stored in an object of class \linkS4class{bmerBuild}.

The \linkS4class{bmerBuild} is then passed to \code{fit_bmer_build}, which calls \code{\link[rstan]{sampling}}, first
creating a \linkS4class{stanmodel} if required (see the vignette).
}

